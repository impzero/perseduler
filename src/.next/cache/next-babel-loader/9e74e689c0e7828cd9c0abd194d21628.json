{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/lyubo/Projects/perseduler/src/hocs/withAuth.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport { Spinner } from '../@chakra-ui/core';\nimport firebase from '../firebase';\n\nvar withAuth = function withAuth(Component) {\n  return function (props) {\n    var _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loading = _React$useState2[0],\n        setLoading = _React$useState2[1];\n\n    React.useEffect(function () {\n      firebase.auth.onAuthStateChanged(function (authUser) {\n        if (authUser) {\n          setLoading(false);\n        } else {\n          Router.push('/');\n        }\n      });\n    }, []);\n\n    if (loading) {\n      return __jsx(Spinner, {\n        color: \"red.500\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 12\n        }\n      });\n    } else {\n      return __jsx(Component, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }\n      }));\n    }\n  };\n};\n\nexport default withAuth;","map":{"version":3,"sources":["/home/lyubo/Projects/perseduler/src/hocs/withAuth.jsx"],"names":["React","Router","Spinner","firebase","withAuth","Component","props","useState","loading","setLoading","useEffect","auth","onAuthStateChanged","authUser","push"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,SAAS;AAAA,SAAI,UAAAC,KAAK,EAAI;AAAA,0BACPN,KAAK,CAACO,QAAN,CAAe,IAAf,CADO;AAAA;AAAA,QAC9BC,OAD8B;AAAA,QACrBC,UADqB;;AAGrCT,IAAAA,KAAK,CAACU,SAAN,CAAgB,YAAM;AACpBP,MAAAA,QAAQ,CAACQ,IAAT,CAAcC,kBAAd,CAAiC,UAAAC,QAAQ,EAAI;AAC3C,YAAIA,QAAJ,EAAc;AACZJ,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAFD,MAEO;AACLR,UAAAA,MAAM,CAACa,IAAP,CAAY,GAAZ;AACD;AACF,OAND;AAOD,KARD,EAQG,EARH;;AAUA,QAAIN,OAAJ,EAAa;AACX,aAAO,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAC,SAAD,eAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;AACF,GAlByB;AAAA,CAA1B;;AAmBA,eAAeF,QAAf","sourcesContent":["import React from 'react';\nimport Router from 'next/router';\nimport { Spinner } from '../@chakra-ui/core';\nimport firebase from '../firebase';\n\nconst withAuth = Component => props => {\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        setLoading(false);\n      } else {\n        Router.push('/');\n      }\n    });\n  }, []);\n\n  if (loading) {\n    return <Spinner color=\"red.500\" />;\n  } else {\n    return <Component {...props} />;\n  }\n};\nexport default withAuth;\n"]},"metadata":{},"sourceType":"module"}