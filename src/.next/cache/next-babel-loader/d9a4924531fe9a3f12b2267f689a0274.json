{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nconst config = {\n  apiKey: 'AIzaSyBnGNTanSV6KD9GOxXUXQ29iGUysNPaLNM',\n  authDomain: 'perseduler.firebaseapp.com',\n  databaseURL: 'https://perseduler.firebaseio.com',\n  projectId: 'perseduler',\n  storageBucket: 'perseduler.appspot.com',\n  messagingSenderId: '719028451432',\n  appId: '1:719028451432:web:a5738df4b32f084e50e3dd',\n  measurementId: 'G-MGJNDW5248'\n};\n\nclass Firebase {\n  constructor() {\n    // https://github.com/zeit/next.js/issues/1999\n    if (!app.apps.length) {\n      app.initializeApp(config);\n      this.auth = app.auth();\n      this.db = app.firestore();\n      this.providers = {\n        google: new app.auth.GoogleAuthProvider()\n      };\n    }\n  }\n\n  async register(name, email, password) {\n    return this.auth.currentUser.updateProfile({\n      displayName: name\n    });\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  loginWithPopup(provider) {\n    if (this.providers[provider]) {\n      return this.auth.signInWithPopup(this.providers[provider]);\n    }\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/lyubo/Projects/perseduler/src/firebase/index.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","apps","length","initializeApp","auth","db","firestore","providers","google","GoogleAuthProvider","register","name","email","password","currentUser","updateProfile","displayName","login","signInWithEmailAndPassword","loginWithPopup","provider","signInWithPopup","logout","signOut","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,4BAFC;AAGbC,EAAAA,WAAW,EAAE,mCAHA;AAIbC,EAAAA,SAAS,EAAE,YAJE;AAKbC,EAAAA,aAAa,EAAE,wBALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;;AAWA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AACZ;AACA,QAAI,CAACX,GAAG,CAACY,IAAJ,CAASC,MAAd,EAAsB;AACpBb,MAAAA,GAAG,CAACc,aAAJ,CAAkBb,MAAlB;AACA,WAAKc,IAAL,GAAYf,GAAG,CAACe,IAAJ,EAAZ;AACA,WAAKC,EAAL,GAAUhB,GAAG,CAACiB,SAAJ,EAAV;AACA,WAAKC,SAAL,GAAiB;AACfC,QAAAA,MAAM,EAAE,IAAInB,GAAG,CAACe,IAAJ,CAASK,kBAAb;AADO,OAAjB;AAGD;AACF;;AAED,QAAMC,QAAN,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,WAAO,KAAKT,IAAL,CAAUU,WAAV,CAAsBC,aAAtB,CAAoC;AACzCC,MAAAA,WAAW,EAAEL;AAD4B,KAApC,CAAP;AAGD;;AAEDM,EAAAA,KAAK,CAACL,KAAD,EAAQC,QAAR,EAAkB;AACrB,WAAO,KAAKT,IAAL,CAAUc,0BAAV,CAAqCN,KAArC,EAA4CC,QAA5C,CAAP;AACD;;AAEDM,EAAAA,cAAc,CAACC,QAAD,EAAW;AACvB,QAAI,KAAKb,SAAL,CAAea,QAAf,CAAJ,EAA8B;AAC5B,aAAO,KAAKhB,IAAL,CAAUiB,eAAV,CAA0B,KAAKd,SAAL,CAAea,QAAf,CAA1B,CAAP;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKlB,IAAL,CAAUmB,OAAV,EAAP;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5B,WAAKtB,IAAL,CAAUuB,kBAAV,CAA6BD,OAA7B;AACD,KAFM,CAAP;AAGD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,WAAO,KAAKxB,IAAL,CAAUU,WAAV,IAAyB,KAAKV,IAAL,CAAUU,WAAV,CAAsBE,WAAtD;AACD;;AAzCY;;AA4Cf,eAAe,IAAIjB,QAAJ,EAAf","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\n\nconst config = {\n  apiKey: 'AIzaSyBnGNTanSV6KD9GOxXUXQ29iGUysNPaLNM',\n  authDomain: 'perseduler.firebaseapp.com',\n  databaseURL: 'https://perseduler.firebaseio.com',\n  projectId: 'perseduler',\n  storageBucket: 'perseduler.appspot.com',\n  messagingSenderId: '719028451432',\n  appId: '1:719028451432:web:a5738df4b32f084e50e3dd',\n  measurementId: 'G-MGJNDW5248'\n};\n\nclass Firebase {\n  constructor() {\n    // https://github.com/zeit/next.js/issues/1999\n    if (!app.apps.length) {\n      app.initializeApp(config);\n      this.auth = app.auth();\n      this.db = app.firestore();\n      this.providers = {\n        google: new app.auth.GoogleAuthProvider()\n      };\n    }\n  }\n\n  async register(name, email, password) {\n    return this.auth.currentUser.updateProfile({\n      displayName: name\n    });\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  loginWithPopup(provider) {\n    if (this.providers[provider]) {\n      return this.auth.signInWithPopup(this.providers[provider]);\n    }\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  }\n}\n\nexport default new Firebase();\n"]},"metadata":{},"sourceType":"module"}