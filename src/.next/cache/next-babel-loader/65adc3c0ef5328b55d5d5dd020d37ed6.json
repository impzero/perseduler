{"ast":null,"code":"var _jsxFileName = \"/home/lyubo/Projects/perseduler/src/hocs/withAuth.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport { Spinner } from '../@chakra-ui/core';\nimport firebase from '../firebase';\n\nconst withAuth = Component => props => {\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        setLoading(false);\n      } else {\n        Router.push('/');\n      }\n    });\n  }, []);\n\n  if (loading) {\n    return __jsx(Spinner, {\n      color: \"red.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return __jsx(Component, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }));\n  }\n};\n\nexport default withAuth;","map":{"version":3,"sources":["/home/lyubo/Projects/perseduler/src/hocs/withAuth.jsx"],"names":["React","Router","Spinner","firebase","withAuth","Component","props","loading","setLoading","useState","useEffect","auth","onAuthStateChanged","authUser","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,QAAQ,GAAGC,SAAS,IAAIC,KAAK,IAAI;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAe,IAAf,CAA9B;AAEAT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpBP,IAAAA,QAAQ,CAACQ,IAAT,CAAcC,kBAAd,CAAiCC,QAAQ,IAAI;AAC3C,UAAIA,QAAJ,EAAc;AACZL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAFD,MAEO;AACLP,QAAAA,MAAM,CAACa,IAAP,CAAY,GAAZ;AACD;AACF,KAND;AAOD,GARD,EAQG,EARH;;AAUA,MAAIP,OAAJ,EAAa;AACX,WAAO,MAAC,OAAD;AAAS,MAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WAAO,MAAC,SAAD,eAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;AACF,CAlBD;;AAmBA,eAAeF,QAAf","sourcesContent":["import React from 'react';\nimport Router from 'next/router';\nimport { Spinner } from '../@chakra-ui/core';\nimport firebase from '../firebase';\n\nconst withAuth = Component => props => {\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        setLoading(false);\n      } else {\n        Router.push('/');\n      }\n    });\n  }, []);\n\n  if (loading) {\n    return <Spinner color=\"red.500\" />;\n  } else {\n    return <Component {...props} />;\n  }\n};\nexport default withAuth;\n"]},"metadata":{},"sourceType":"module"}