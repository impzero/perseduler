{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nvar config = {\n  apiKey: 'AIzaSyBnGNTanSV6KD9GOxXUXQ29iGUysNPaLNM',\n  authDomain: 'perseduler.firebaseapp.com',\n  databaseURL: 'https://perseduler.firebaseio.com',\n  projectId: 'perseduler',\n  storageBucket: 'perseduler.appspot.com',\n  messagingSenderId: '719028451432',\n  appId: '1:719028451432:web:a5738df4b32f084e50e3dd',\n  measurementId: 'G-MGJNDW5248'\n};\n\nvar Firebase = /*#__PURE__*/function () {\n  function Firebase() {\n    _classCallCheck(this, Firebase);\n\n    // https://github.com/zeit/next.js/issues/1999\n    if (!app.apps.length) {\n      app.initializeApp(config);\n      this.auth = app.auth();\n      this.db = app.firestore();\n      this.providers = {\n        google: new app.auth.GoogleAuthProvider()\n      };\n    }\n  }\n\n  _createClass(Firebase, [{\n    key: \"register\",\n    value: function register(name, email, password) {\n      return _regeneratorRuntime.async(function register$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.auth.currentUser.updateProfile({\n                displayName: name\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"login\",\n    value: function login(email, password) {\n      return this.auth.signInWithEmailAndPassword(email, password);\n    }\n  }, {\n    key: \"loginWithPopup\",\n    value: function loginWithPopup(provider) {\n      if (this.providers[provider]) {\n        return this.auth.signInWithPopup(this.providers[provider]);\n      }\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return this.auth.signOut();\n    }\n  }, {\n    key: \"isInitialized\",\n    value: function isInitialized() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.auth.onAuthStateChanged(resolve);\n      });\n    }\n  }, {\n    key: \"getCurrentUsername\",\n    value: function getCurrentUsername() {\n      return this.auth.currentUser && this.auth.currentUser.displayName;\n    }\n  }]);\n\n  return Firebase;\n}();\n\nexport default new Firebase();","map":{"version":3,"sources":["/home/lyubo/Projects/perseduler/src/firebase/index.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","apps","length","initializeApp","auth","db","firestore","providers","google","GoogleAuthProvider","name","email","password","currentUser","updateProfile","displayName","signInWithEmailAndPassword","provider","signInWithPopup","signOut","Promise","resolve","onAuthStateChanged"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,4BAFC;AAGbC,EAAAA,WAAW,EAAE,mCAHA;AAIbC,EAAAA,SAAS,EAAE,YAJE;AAKbC,EAAAA,aAAa,EAAE,wBALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;;IAWMC,Q;AACJ,sBAAc;AAAA;;AACZ;AACA,QAAI,CAACV,GAAG,CAACW,IAAJ,CAASC,MAAd,EAAsB;AACpBZ,MAAAA,GAAG,CAACa,aAAJ,CAAkBZ,MAAlB;AACA,WAAKa,IAAL,GAAYd,GAAG,CAACc,IAAJ,EAAZ;AACA,WAAKC,EAAL,GAAUf,GAAG,CAACgB,SAAJ,EAAV;AACA,WAAKC,SAAL,GAAiB;AACfC,QAAAA,MAAM,EAAE,IAAIlB,GAAG,CAACc,IAAJ,CAASK,kBAAb;AADO,OAAjB;AAGD;AACF;;;;6BAEcC,I,EAAMC,K,EAAOC,Q;;;;;+CACnB,KAAKR,IAAL,CAAUS,WAAV,CAAsBC,aAAtB,CAAoC;AACzCC,gBAAAA,WAAW,EAAEL;AAD4B,eAApC,C;;;;;;;;;;;0BAKHC,K,EAAOC,Q,EAAU;AACrB,aAAO,KAAKR,IAAL,CAAUY,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAAP;AACD;;;mCAEcK,Q,EAAU;AACvB,UAAI,KAAKV,SAAL,CAAeU,QAAf,CAAJ,EAA8B;AAC5B,eAAO,KAAKb,IAAL,CAAUc,eAAV,CAA0B,KAAKX,SAAL,CAAeU,QAAf,CAA1B,CAAP;AACD;AACF;;;6BAEQ;AACP,aAAO,KAAKb,IAAL,CAAUe,OAAV,EAAP;AACD;;;oCAEe;AAAA;;AACd,aAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5B,QAAA,KAAI,CAACjB,IAAL,CAAUkB,kBAAV,CAA6BD,OAA7B;AACD,OAFM,CAAP;AAGD;;;yCAEoB;AACnB,aAAO,KAAKjB,IAAL,CAAUS,WAAV,IAAyB,KAAKT,IAAL,CAAUS,WAAV,CAAsBE,WAAtD;AACD;;;;;;AAGH,eAAe,IAAIf,QAAJ,EAAf","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\n\nconst config = {\n  apiKey: 'AIzaSyBnGNTanSV6KD9GOxXUXQ29iGUysNPaLNM',\n  authDomain: 'perseduler.firebaseapp.com',\n  databaseURL: 'https://perseduler.firebaseio.com',\n  projectId: 'perseduler',\n  storageBucket: 'perseduler.appspot.com',\n  messagingSenderId: '719028451432',\n  appId: '1:719028451432:web:a5738df4b32f084e50e3dd',\n  measurementId: 'G-MGJNDW5248'\n};\n\nclass Firebase {\n  constructor() {\n    // https://github.com/zeit/next.js/issues/1999\n    if (!app.apps.length) {\n      app.initializeApp(config);\n      this.auth = app.auth();\n      this.db = app.firestore();\n      this.providers = {\n        google: new app.auth.GoogleAuthProvider()\n      };\n    }\n  }\n\n  async register(name, email, password) {\n    return this.auth.currentUser.updateProfile({\n      displayName: name\n    });\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  loginWithPopup(provider) {\n    if (this.providers[provider]) {\n      return this.auth.signInWithPopup(this.providers[provider]);\n    }\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  }\n}\n\nexport default new Firebase();\n"]},"metadata":{},"sourceType":"module"}